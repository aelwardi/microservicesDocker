version: "3.9"
services:
  mongodb:
      image: mongo:6
      container_name: mongodb
      ports:
        - "27017:27017"
      volumes:
        - mongodb_data:/data/db
      healthcheck:
        test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
        interval: 10s
        timeout: 5s
        retries: 5
      networks:
        - backend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "8080:8080"
    env_file:
      - ./frontend/.env
    depends_on:
      product-service:
        condition: service_healthy
        restart: true
    networks:
      - frontend
      - backend
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
      target: development
    container_name: product-service
    volumes:
      - ./services/product-service:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
        restart: true
    env_file:
      - ./services/product-service/.env
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"] 
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - backend
  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    container_name: order-service-dev
    ports:
      - "3002:3002"
    volumes:
      - ./services/order-service:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
        restart: true
    networks:
      - backend
    env_file:
      - ./services/order-service/.env

networks:
  frontend:
  backend:

volumes:
  mongodb_data: